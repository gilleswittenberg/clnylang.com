{"version":3,"sources":["components/Header.tsx","hooks/useClny.ts","components/Playground.tsx","components/About.tsx","components/Page404.tsx","hooks/useRoutes.ts","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["Header","props","switchRoute","react_default","a","createElement","href","onClick","event","preventDefault","createRun","setResult","setOutput","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","content","mode","_ref2","_ref3","result","output","str","wrap","_context","prev","next","clny","sent","slicedToArray","obj","JSON","stringify","t0","console","error","stop","_x","_x2","apply","this","arguments","Playground","_useState","useState","_useState2","text","setText","modes","_useState3","_useState4","setMode","_useState5","_useState6","showOutput","setShowOutput","_useClny","useClny","_useClny2","runClny","run","useEffect","textareaElement","useRef","handler","document","activeElement","current","which","ctrlKey","window","addEventListener","removeEventListener","showResult","showResultAndOutput","className","ref","cols","rows","value","onChange","target","map","m","key","type","id","name","checked","htmlFor","Fragment","line","About","Page404","pathname","location","path","base","route","useRoutes","routes","length","undefined","routesObject","isHome","is404","isPage","log","defaultRoute","find","setRoute","onpopstate","history","pushState","App","slice","_useRoutes","_useRoutes2","showPlayground","showAbout","show404","components_Header","components_Playground","components_About","components_Page404","Boolean","hostname","match","ReactDOM","render","components_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.70708a06.chunk.js","sourcesContent":["import React from 'react'\nimport './css/Header.sass'\nimport { SwitchRoute } from \"../hooks/useRoutes\"\n\ntype Props = {\n  switchRoute: SwitchRoute\n}\n\nconst Header = (props: Props ) => {\n  const { switchRoute } = props\n  return (\n    <header>\n      <h1>clny</h1>\n      <nav>\n        <ul>\n          <li><a href=\"/\" onClick={ event => { event.preventDefault(); switchRoute(\"/\") } }>playground</a></li>\n          <li><a href=\"/about\" onClick={ event => { event.preventDefault(); switchRoute(\"/about\") } }>about</a></li>\n        </ul>\n      </nav>\n    </header>\n  )\n}\n\nexport default Header\n","import { useState } from 'react'\nimport clny from 'clny'\n\ntype Strings = string[]\ntype Run = (content: string, mode: string) => Promise<void>\n\nconst isObject = (v: any) => typeof v === \"object\"\nconst toString = (obj: any) => JSON.stringify(obj, null, 2)\n\nexport default () : [Run, string, Strings] => {\n\n  const [result, setResult] = useState(\"\")\n  const [output, setOutput] = useState<Strings>([])\n  const run = createRun(setResult, setOutput)\n  return [run, result, output]\n}\n\nconst createRun = (setResult: any, setOutput: any) =>\n  async (content: string, mode: string) => {\n    try {\n      const [result, output] = await clny(content, mode, false)\n      const str = isObject(result) ? toString(result) : result\n      setResult(str)\n      setOutput(output)\n    } catch (err) {\n      console.error(err)\n    }\n  }\n","import React, { useState, useEffect, useRef } from 'react'\nimport useClny from '../hooks/useClny'\nimport './css/Playground.sass'\n\nconst Playground = () => {\n\n  const defaultText = \"# comment\\n\\nprint \\\"Hello World\\\"\\n\\n1 + 2 * 3\\n\\n\"\n  const [text, setText] = useState(defaultText)\n\n  const modes = [\"code\", \"json\", \"parse\"]\n  const [mode, setMode] = useState(modes[0])\n\n  const [showOutput, setShowOutput] = useState(true)\n\n  const [runClny, result, output] = useClny()\n  const run = () => runClny(text, mode)\n  useEffect(() => { run() }, [])\n\n  const textareaElement = useRef(null)\n  useEffect(() => {\n    const handler = (event: KeyboardEvent) => {\n      if (document.activeElement !== textareaElement.current) return\n      const isEnter = (keyCode: number) => keyCode === 13\n      if (isEnter(event.which) && event.ctrlKey === true) {\n        run()\n      }\n    }\n    window.addEventListener(\"keypress\", handler, false)\n    return () => window.removeEventListener(\"keypress\", handler)\n  }, [text, mode])\n\n  const showResult = result !== \"\"\n  const showResultAndOutput = showResult || showOutput\n\n  return (\n    <div className=\"playground\">\n      <textarea ref={ textareaElement } cols={ 128 } rows={ 16 } value={ text } onChange={ event => setText(event.target.value) } />\n      <div className=\"wrap-content\">\n        <div className=\"wrap-input\">\n          <div className=\"wrap-radio-select\">\n            <div className=\"wrap-radio\">\n              { modes.map(m =>\n                  <div key={ m }>\n                    <input type=\"radio\" id={ m } name=\"mode\" value={ m } onChange={ event => setMode(event.target.value) } checked={ m === mode }/>\n                    <label htmlFor={ m }>{ m }</label>\n                  </div>\n                )\n              }\n            </div>\n            <div className=\"wrap-select\">\n              <input type=\"checkbox\" id=\"show-output\" checked={ showOutput } onChange={ event => setShowOutput(event.target.checked) } />\n              <label htmlFor=\"show-output\">show output</label>\n            </div>\n          </div>\n          <div>\n            <button onClick={ event => run() }>play</button>\n          </div>\n        </div>\n        <div className=\"result\">\n          { showResultAndOutput &&\n            <>\n              <h3>result:</h3>\n              { showOutput &&\n                output.map(line => <p className=\"output\" key={ line }>{ line }</p>)\n              }\n              { showResult &&\n                <code>{ result }</code>\n              }\n            </>\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Playground\n","import React from 'react'\nimport './css/About.sass'\n\nconst About = () => {\n  return (\n    <div className=\"about\">\n      <div className=\"wrap-content\">\n        <p>Programming language implementation in JavaScript, using parser combinator library <a href=\"https://github.com/francisrstokes/arcsecond\">Arcsecond</a></p>\n        <ul>\n          <li><a href=\"https://github.com/gilleswittenberg/clny-js\">github.com/gilleswittenberg/clny-js</a></li>\n          <li><a href=\"https://github.com/gilleswittenberg/clnylang.com\">github.com/gilleswittenberg/clnylang.com</a></li>\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default About\n","import React from 'react'\n\nconst Page404 = () => {\n  return (\n    <div className=\"page404\">\n      <p>404</p>\n    </div>\n  )\n}\n\nexport default Page404\n","import { useState, useEffect } from 'react'\n\ntype Route = string\ntype OptionalRoute = Route | undefined\ntype Routes = Route[]\ntype Base = string\n\ntype RoutesObject = {\n  route: () => OptionalRoute,\n  isHome: () => boolean,\n  is404: () => boolean,\n  isPage: (arg0: Route) => boolean\n}\nexport type SwitchRoute = (arg0: Route) => void\n\nconst pathname = document.location.pathname\n\nconst path = (base: Base, route: Route) => base + route\n\nconst useRoutes = (routes: Routes, base: Base = \"\") : [RoutesObject, SwitchRoute] => {\n\n  const routesObject: RoutesObject = {\n    route:  () => route,\n    isHome: () => route === \"/\",\n    is404:  () => route === undefined,\n    isPage: (path: Route) => route === path\n  }\n\n  console.log(\"base\", base)\n\n  const defaultRoute = routes.find(route => {\n    console.log(path(base, route), pathname)\n    return path(base, route) === pathname\n  })\n  const [route, setRoute] = useState<OptionalRoute>(defaultRoute)\n  const switchRoute = (route: Route) => {\n    window.history.pushState(null, route, path(base, route))\n    setRoute(route)\n  }\n\n  useEffect(() => {\n    window.onpopstate = () => {\n      setRoute(pathname)\n    }\n  }, [])\n\n  return [routesObject, switchRoute]\n}\n\nexport default useRoutes\n","import React from 'react'\nimport Header from \"./Header\"\nimport Playground from \"./Playground\"\nimport About from \"./About\"\nimport Page404 from \"./Page404\"\nimport useRoutes from \"../hooks/useRoutes\"\nimport './css/App.sass'\n\nconst routes = [\"/\", \"/about\"]\n\nconst App = () => {\n\n  const base = document.location.pathname.slice(0, 12) === \"clnylang.com\" ? \"/clnylang.com\" : \"\"\n  console.log(base)\n\n  const [route, switchRoute] = useRoutes(routes, base)\n  const showPlayground = route.isHome()\n  const showAbout = route.isPage(\"/about\")\n  const show404 = route.is404()\n\n  return (\n    <>\n      <Header switchRoute={ switchRoute }/>\n      <main>\n        { showPlayground && <Playground/> }\n        { showAbout && <About/> }\n        { show404 && <Page404/> }\n      </main>\n    </>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}